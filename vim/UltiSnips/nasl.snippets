snippet dis "display statements for debugging"
display('debug $1: ' + ${2:var}  + '\n');
$0
endsnippet

snippet ln "debug with line number"
display("Debug line: " + LINE_NUMBER + '\n');
$0
endsnippet

snippet todo "todo reminder" b
##
# `date`
# TODO: ${1:What to do...}
##
$0
endsnippet

# autocomplete
global !p
def ac(t, opts):
    if t:
        opts = [ m[len(t):] for m in opts if m.startswith(t) ]
    if len(opts) == 1:
        return opts[0]
    return "(" + "|".join(opts) + ")"
endglobal

snippet sr "security_report_v4"
security_report_v4(port:port, extra:report, severity:SECURITY_$1`!p snip.rv=ac(t[1],['NOTE','WARNING','HOLE'])`);
exit(0);
$0
endsnippet


global !p
def rand_pid(start, end):
	import random
	return random.randrange(start,end)
endglobal

snippet ia "include audit.inc"
include("audit.inc");
$0
endsnippet

snippet ig "include glocal_settings.inc"
include("global_settings.inc");
$0
endsnippet

snippet ii "include install_func.inc"
include("install_func.inc");
$0
endsnippet

snippet im "include misc_func.inc"
include("misc_func.inc");
$0
endsnippet


snippet obj "dump objects to determine structure"
include ("obj.inc");
$0
endsnippet

snippet obkb "stuff obj_rep content into the KB"
### DEBUG ###
set_kb_item(name:"debug/" + debug_count, value:obj_rep(${1}));
debug_count++;
#############
$0
endsnippet

snippet dc "init debug counter"
debug_count = 0;
$0
endsnippet


snippet vc "ver_compare"
if (ver_compare(ver:${2:ver}, fix:${3:fix}, strict:$1`!p snip.rv=ac(t[1],['TRUE','FALSE'])`) == 0 )
{
  ${0:#placeholder}
}
endsnippet

snippet report "report"
items = make_array("Installed version", version,
                   "Fixed version", fix
                  );

order = make_list("Installed version", "Fixed version");
report = report_items_str(report_items:items, ordered_fields:order);
$0
endsnippet

snippet port "http port"
port = get_http_port(default: 80);
$0
endsnippet

snippet http

url = "${2}";

res = http_send_recv3(
  method       : "$1`!p snip.rv=ac(t[1],['GET','POST'])`",
  item         : url,
  port         : port,
  exit_on_fail : TRUE
);
$0
endsnippet

snippet pid
script_id(`!p if not snip.c: snip.rv=rand_pid(917000,917100)`);
script_version("$Revision$");
script_cvs_date("$Date$");
$0
endsnippet

snippet gsi "Get single install, this branches"
app = "${2:Application}";

install  = get_single_install(app_name:app, exit_if_unknown_ver:$1`!p snip.rv=ac(t[1],['TRUE','FALSE'])`);
ver      = install['version'];
path     = install['path'];
$0
endsnippet

snippet ri "Register an install"
register_install(
  app_name:${1:app},
  path:${2:path},
  version:${3:version},
  cpe:"cpe:/${4:a}");
$0
endsnippet

snippet copy
script_copyright(english:"This script is Copyright (C) `date +%Y` Tenable Network Security, Inc.");
$0
endsnippet

snippet pot
script_set_attribute(attribute:"potential_vulnerability", value:"true");
$0
endsnippet

snippet dates
#published, patched

$0
endsnippet

snippet fam
script_family(english:"$1`!p
f = ['Backdoors', 'CGI abuses', 'CGI abuses : XSS', 'CISCO', 'Databases',
		 'Default Unix Accounts', 'Denial of Service', 'DNS', 'Firewalls', 'FTP',
		 'Gain a shell remotely', 'General', 'Misc.', 'Mobile Devices', 'Settings', 
		 'SMTP Problems', 'SNMP', 'Web Servers', 'Windows', 'Windows : Microsoft Bulletins']
snip.rv = ac(t[1],f)`);
endsnippet

